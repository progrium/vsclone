on:
  push:
    branches:
      - main
jobs:
  detect-vscode-changes:
    runs-on: ubuntu-latest
    outputs:
      vscode-changed: ${{ steps.changes.outputs.vscode }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            vscode:
              - 'external/vscode/**'
  
  build-vscode:
    needs: detect-vscode-changes
    if: needs.detect-vscode-changes.outputs.vscode-changed == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    name: Build patched VSCode Web artifact
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build VSCode Web
        uses: docker/build-push-action@v5
        with:
          context: external/vscode/patched
          push: true
          load: true
          tags: ghcr.io/${{ github.repository }}:vscode-web

      - working-directory: ./external/vscode
        run: |
          rm -rf ./dist && mkdir -p ./dist/vscode
          docker run --rm -v $(pwd)/dist/vscode:/dist ghcr.io/${{ github.repository }}:vscode-web

      - uses: actions/upload-artifact@v4
        with:
          name: vscode-web
          path: external/vscode/dist

  build-windows:
    needs: [detect-vscode-changes, build-vscode]
    if: always() && needs.detect-vscode-changes.result == 'success'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    name: Build VSClone for Windows
    env:
      DIST_OS: windows
      DIST_ARCH: arm64 amd64
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          check-latest: true

      - working-directory: ./external/vscode
        run: |
          rm -rf ./dist && mkdir -p ./dist/vscode
          docker run --rm -v $(pwd)/dist/vscode:/dist ghcr.io/${{ github.repository }}:vscode-web
          zip -r ../../assets/vscode-web.zip ./dist

      - name: Build project for Windows
        run: make archive
      
      - name: Clean non-zip files in dist/
        run: find dist/ -type f ! -name '*.zip' -exec rm -f {} +

      - uses: actions/upload-artifact@v4
        with:
          name: vsclone-windows
          path: dist/

  build-linux:
    needs: [detect-vscode-changes, build-vscode]
    if: always() && needs.detect-vscode-changes.result == 'success'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    name: Build VSClone for Linux
    env:
      DIST_OS: linux
      DIST_ARCH: arm64 amd64
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          check-latest: true

      - working-directory: ./external/vscode
        run: |
          rm -rf ./dist && mkdir -p ./dist/vscode
          docker run --rm -v $(pwd)/dist/vscode:/dist ghcr.io/${{ github.repository }}:vscode-web
          zip -r ../../assets/vscode-web.zip ./dist

      - name: Build project for Linux
        run: make archive
      
      - name: Clean non-zip files in dist/
        run: find dist/ -type f ! -name '*.zip' -exec rm -f {} +

      - uses: actions/upload-artifact@v4
        with:
          name: vsclone-linux
          path: dist/
  
  build-darwin-arm64:
    needs: [detect-vscode-changes, build-vscode]
    if: always() && needs.detect-vscode-changes.result == 'success'
    runs-on: macos-14
    permissions:
      contents: write
    name: Build VSClone for Darwin ARM64
    env:
      DIST_OS: darwin
      DIST_ARCH: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          check-latest: true

      - name: Install Colima and Docker CLI
        run: |
          brew install colima docker
          colima start --memory 4 --disk 10
          docker version

      - working-directory: ./external/vscode
        run: |
          rm -rf ./dist && mkdir -p ./dist/vscode
          docker run --rm -v $(pwd)/dist/vscode:/dist ghcr.io/${{ github.repository }}:vscode-web
          zip -r ../../assets/vscode-web.zip ./dist

      - name: Build project for Linux
        run: make archive
      
      - name: Clean non-zip files in dist/
        run: find dist/ -type f ! -name '*.zip' -exec rm -f {} +

      - uses: actions/upload-artifact@v4
        with:
          name: vsclone-darwin-arm64
          path: dist/

  build-darwin-amd64:
    needs: [detect-vscode-changes, build-vscode]
    if: always() && needs.detect-vscode-changes.result == 'success'
    runs-on: macos-13
    permissions:
      contents: write
    name: Build VSClone for Darwin AMD64
    env:
      DIST_OS: darwin
      DIST_ARCH: amd64
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          check-latest: true

      - working-directory: ./external/vscode
        run: |
          rm -rf ./dist && mkdir -p ./dist/vscode
          docker run --rm -v $(pwd)/dist/vscode:/dist ghcr.io/${{ github.repository }}:vscode-web
          zip -r ../../assets/vscode-web.zip ./dist

      - name: Build project for Linux
        run: make archive
      
      - name: Clean non-zip files in dist/
        run: find dist/ -type f ! -name '*.zip' -exec rm -f {} +

      - uses: actions/upload-artifact@v4
        with:
          name: vsclone-darwin-arm64
          path: dist/
